andi r0,r0,0	// *** INPUT VECTOR INITIALIZATION
addi r0,r0,16 // r0 = n (number of elements), used on whole algorithm
andi r1,r1,0	// r1 = 0 is a counter
beq r1,r0,6	// while( r1 != n ){
sub r7,r0,r1	//      r7 = n - r1;
sll r6,r1,2	//      r6 = r1*4;
sw r7,192(r6)  	//	A[192 + r1*4] = n - r1;   -->  A[i] = n - i;
addi r1,r1,1  	//	r1++;
j 3           	// }
andi r1,r1,0	// *** INSERTION_SORT CODE (r0:n, r1:j, r2:key, r3:i)
addi r1,r1,1    // j = 1;  
beq r1,r0,22	// while( j != n ){
sll r7,r1,2	//
lw r2,192(r7)	//	key = A[j];
addi r3,r1,-1	//	i = j-1;
andi r7,r7,0	//      while( i > -1 && A[i] > key ){
addi r7,r7,-1	//
beq r3,r7,11	//
sll r7,r3,2	//
lw r7,192(r7)	//
slt r6,r2,r7    //
andi r5,r5,0	//
beq r6,r5,11	//
addi r6,r3,1	//		A[i+1] = A[i];
sll r6,r6,2	//
sw r7,192(r6)	//
addi r3,r3,-1	//		i--;
j 15		//	}
addi r6,r3,1	//	A[i+1] = key;
sll r6,r6,2	//
sw r2,192(r6)	//
addi r1,r1,1  	//	j++;
j 11           	// }
andi r12,r12,0  // system call exit
syscall
